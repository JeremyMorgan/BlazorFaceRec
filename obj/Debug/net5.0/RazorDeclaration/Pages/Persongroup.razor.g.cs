// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace blazorfacerec.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Jeremy Morgan\Repos\BlazorFaceRec\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Jeremy Morgan\Repos\BlazorFaceRec\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Jeremy Morgan\Repos\BlazorFaceRec\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Jeremy Morgan\Repos\BlazorFaceRec\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Jeremy Morgan\Repos\BlazorFaceRec\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Jeremy Morgan\Repos\BlazorFaceRec\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Jeremy Morgan\Repos\BlazorFaceRec\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Jeremy Morgan\Repos\BlazorFaceRec\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Jeremy Morgan\Repos\BlazorFaceRec\_Imports.razor"
using blazorfacerec;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Jeremy Morgan\Repos\BlazorFaceRec\_Imports.razor"
using blazorfacerec.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Jeremy Morgan\Repos\BlazorFaceRec\Pages\Persongroup.razor"
using System.Runtime.CompilerServices;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Jeremy Morgan\Repos\BlazorFaceRec\Pages\Persongroup.razor"
using System.Text;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Jeremy Morgan\Repos\BlazorFaceRec\Pages\Persongroup.razor"
using System.Text.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Jeremy Morgan\Repos\BlazorFaceRec\Pages\Persongroup.razor"
using System.Text.Json.Serialization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Jeremy Morgan\Repos\BlazorFaceRec\Pages\Persongroup.razor"
using System.Net.Mime;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/Persongroup")]
    public partial class Persongroup : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 56 "C:\Users\Jeremy Morgan\Repos\BlazorFaceRec\Pages\Persongroup.razor"
       

    private PersonGroup[] _personGroups;
    public string PersonGroupName { get; set; }
    public string PersonGroupDescription { get; set; }
    public string DisplayMessage { get; set; }

    [Inject]
    private AppConfiguration _config { get; set; }

    public class PersonGroup
    {
        public string personGroupId { get; set; }
        public string name { get; set; }
        public string userData { get; set; }
    }

    protected override async Task OnInitializedAsync()
    {
        DisplayMessage = "hello!";
        await PopulateTable();
    }

    private async Task PopulateTable()
    {

        HttpClient client = new HttpClient { BaseAddress = new Uri(_config.BaseUrl + "face/v1.0/persongroups/") };

        HttpResponseMessage response = null;

        client.DefaultRequestHeaders.Add("Ocp-Apim-Subscription-Key", _config.ApiKey);

        response = await client.GetAsync(client.BaseAddress);

        if (response.Content is object && response.Content.Headers.ContentType.MediaType == "application/json")
        {
            var content = await response.Content.ReadAsStringAsync();
            _personGroups = JsonSerializer.Deserialize<PersonGroup[]>(content, new JsonSerializerOptions { PropertyNameCaseInsensitive = true });
        }
    }

    private async Task AddPersonGroup()
    {
        Guid id = Guid.NewGuid();

        HttpClient client = new HttpClient { BaseAddress = new Uri(_config.BaseUrl + "face/v1.0/persongroups/" + id) };

        HttpResponseMessage response = null;

        client.DefaultRequestHeaders.Add("Ocp-Apim-Subscription-Key", _config.ApiKey);

        var payload = new PersonGroup { name = PersonGroupName, userData = PersonGroupDescription };

        var payloadString = new StringContent(System.Text.Json.JsonSerializer.Serialize(payload), Encoding.UTF8, MediaTypeNames.Application.Json);

        response = await client.PutAsync(client.BaseAddress, payloadString);

        if (response.IsSuccessStatusCode)
        {
            await PopulateTable();
            DisplayMessage = "added!";
        }
        else
        {
            DisplayMessage = response.StatusCode.ToString() + "\n" + client.BaseAddress.ToString();
        }

    }

    private async Task DeletePersonGroup(string id)
    {
        HttpClient client = new HttpClient { BaseAddress = new Uri(_config.BaseUrl + "face/v1.0/persongroups/" + id) };

        HttpResponseMessage response = null;

        client.DefaultRequestHeaders.Add("Ocp-Apim-Subscription-Key", _config.ApiKey);

        response = await client.DeleteAsync(client.BaseAddress);

        if (response.IsSuccessStatusCode)
        {
            DisplayMessage = "We deleted: " + id;
        }

        await PopulateTable();
    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
